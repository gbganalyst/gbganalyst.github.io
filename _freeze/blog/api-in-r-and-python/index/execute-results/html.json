{
  "hash": "1fa22627aa4f40e60d887ffcaf054234",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"How to fetch API data in R and Python\"\ndescription: | \n  This tutorial will teach you how to fetch data from an external source using HTTP requests and parse the data into a usable format.\ndate: \"08-14-2024\"\ncategories: \n  - API\n  - R\n  - Python\n\nlightbox: true\n\nimage: how-api-work.jpg\n\nformat: \n  html:\n    fig-cap-location: bottom\n    include-before-body: ../../html/margin_image.html\n    include-after-body: ../../html/blog_footer.html\n    page-layout: full # custom #article,\n    code-fold: false\n#    link-external-icon: true\n#    link-external-newwindow: true\n#editor: visual\neditor: \n  markdown: \n    wrap: sentence\nexecute:\n  error: true\n  eval: false\n  echo: true #fenced\n  freeze: auto\neditor_options: \n  chunk_output_type: console\n  \nresources: \n  - \"how-api-work.jpg\"\ntwitter-card:\n  title: \"How to fetch API data in R and Python\"\n  image: \"how-api-work.jpg\"\n  image-width: \"1280\"\n  image-height: \"720\"\nopen-graph:\n  title: \"How to fetch API data in R and Python\"\n  image: \"how-api-work.jpg\" \n  image-width: \"1280\"\n  image-height: \"720\"\n---\n\n\n\n## What is an API?\n\n![Image source: Unsplash](API.jpg){style=\"float:right;\" fig-alt=\"API image\" width=\"200\"}\n\nAn API (Application Programming Interface) is a set of protocols, routines, and tools used for building software applications.\nIt is essentially a set of rules and methods that data analyst or software developers can use to interact with and access the services and features provided by another application, service or platform.\n\nIn simpler terms, an API allows different software applications to communicate with each other and share data in a standardized way.\nWith APIs, developers or analysts can get data without needing to scrape the website, manually download it, or directly go to the company from which they need it.\n\n![How API work](how-api-work.jpg){#fig-elephant fig-align=\"left\" width=\"70%\"}\n\nFor example, if you want to integrate a weather forecast feature into your app, you can use a weather API that provides the necessary data, rather than building the entire feature from scratch.\nThis allows you to focus on the unique aspects of your app, without worrying about the underlying functionality.\n\n## Type of request methods\n\n\n\n::: {.cell layout-align=\"left\"}\n::: {.cell-output-display}\n![Types of request method](image-849919650.png){#fig-api-method fig-align='left' width=488}\n:::\n:::\n\n\n\nAs shown in @fig-api-method, the most common type of API request method is `GET`.\n\n## General rules for using an API\n\nTo use an API to extract data, you will need to follow these steps:\n\n1.  Find an API that provides the data you are interested in.\n    This may involve doing some research online to find available APIs.\n\n2.  Familiarize yourself with the API's documentation to understand how to make requests and what data is available.\n\n3.  Use a programming language to write a script that sends a request to the API and receives the data.\n    Depending on the API, you may need to include authentication parameters in the request to specify the data you want to receive.\n\n4.  Parse the data you receive from the API to extract the information you are interested in.\n    The format of the data will depend on the API you are using, and may be in JSON, XML, or another format.\n\n5.  Process the extracted data in your script, or save it to a file or database for later analysis.\n\n## How to fetch API data using a programming language\n\n### with R Ⓡ {#sec-api-r}\n\nThere are several packages available in R for consuming APIs.\nSome of the most commonly used packages are:\n\n1.  **httr**: This package provides convenient functions for making HTTP requests and processing the responses.\n\n2.  **jsonlite**: This package is used for parsing JSON data, which is a common format for API responses.\n\n3.  **RCurl**: This package is a wrapper around the libcurl library, which is a powerful and versatile HTTP client library.\n\nTo get data from an API in R, you need to follow these steps:\n\n1.  Install the required packages by running the following command in the R console:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"installation of packages\"}\ninstall.packages(c(\"httr\", \"jsonlite\", \"RCurl\"))\n```\n:::\n\n\n\n2.  Load the packages by running the following command:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Loading of packages\"}\nlibrary(httr)\n\nlibrary(jsonlite)\n\nlibrary(RCurl)\n```\n:::\n\n\n\n3.  Make an API request by using the GET function from the httr package. The API endpoint should be passed as an argument to this function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresponse <- GET(\"https://api.example.com/endpoint\")\n```\n:::\n\n\n\n4.  Check the status code of the response to see if the request was successful. A status code of `200` indicates a successful request.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Request status\"}\nstatus_code <- status_code(response)\n```\n:::\n\n\n\n5.  Extract the data from the response. If the API returns data in JSON format, you can use the `fromJSON` function from the `jsonlite` package to parse the data. Store the data in a variable for later use.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Resulting dataframe\"}\napi_data <- fromJSON(content(response, as = \"text\"))\n```\n:::\n\n\n\nThese are the basic steps to get data from an API in R.\nDepending on the API, you may need to pass additional parameters or authentication information in your request.\nFor example,\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"API with access key\"}\nresponse <- GET(\n  \"https://api.example.com/endpoint\",\n  authenticate(\n    user = \"API_KEY_HERE\",\n    password = \"API_PASSWORD_HERE\",\n    type = \"basic\"\n  )\n)\n```\n:::\n\n\n\n### with Python 🐍 {#sec-api-py}\n\nTo use an API in Python, you can use a library such as `requests` or `urllib` to send HTTP requests to the API and receive responses.\nHere's an example of how to use an API in Python using the requests library:\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport requests\n\n# Define the API endpoint URL and parameters\nendpoint = 'https://api.example.com/data'\n\nparams = {'param1': 'value1', 'param2': 'value2'}\n\n# Send a GET request to the API endpoint\nresponse = requests.get(endpoint, params = params)\n\n# Check if the request was successful\nif response.status_code == 200:\n    # Parse the response JSON data\n    data = response.json()\n\n    # Process the data, for example by printing it to the console\n    print(data)\nelse:\n    print(f'Error: {response.status_code}')\n```\n:::\n\n\n\nIn this example, we're using the `requests` library to send a GET request to an API endpoint at `https://api.example.com/data`, passing two parameters (`param1` and `param2`) in the request.\nThe `requests.get()` method returns a `Response` object, which we can use to check the response status code and parse the response data.\n\nIf the status code is `200`, we can assume the request was successful, and we can parse the response data using the `response.json()` method, which converts the JSON-formatted response to a Python object.\nWe can then process the data as needed, for example by printing it to the console.\n\nOf course, the exact API endpoint and parameters will depend on the specific API that you are using, and you'll need to consult the API documentation to learn how to construct your request correctly.\nBut this example should give you a sense of the general process involved in using an API in Python.\n\n## Practical example in R and Python\n\nWe will use R and Python to fetch the API data without and with the key.\n\n### Without the key\n\nIn this example, we will use an API from a site called [![](give_food.png){height=\"30\"}](https://www.givefood.org.uk/api/2/docs/) that uses an API without an API key.\nIn this case, we will be using a `GET` request to fetch the API data at the **food banks** using this link: <https://www.givefood.org.uk/api/2/foodbanks>.\nPlease follow the steps in @sec-api-r for R and @sec-api-py for Python.\n\n::: {.panel-tabset group=\"language\"}\n## R Ⓡ \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr)\n\nlibrary(jsonlite)\n\nlibrary(dplyr)\n\nresponse <- GET(\"https://www.givefood.org.uk/api/2/foodbanks\")\n\nstatus_code(response)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 200\n```\n\n\n:::\n\n```{.r .cell-code}\nfood_dataframe <- fromJSON(content(response, as = \"text\"), flatten = TRUE)\n\nfood_dataframe %>%\n  dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 954  27\n```\n\n\n:::\n\n```{.r .cell-code}\nfood_dataframe %>%\n  head()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"alt_name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"slug\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"phone\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"secondary_phone\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"email\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"address\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"postcode\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"closed\"],\"name\":[9],\"type\":[\"lgl\"],\"align\":[\"right\"]},{\"label\":[\"country\"],\"name\":[10],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"lat_lng\"],\"name\":[11],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"network\"],\"name\":[12],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"created\"],\"name\":[13],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"urls.self\"],\"name\":[14],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"urls.html\"],\"name\":[15],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"urls.homepage\"],\"name\":[16],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"urls.shopping_list\"],\"name\":[17],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"charity.registration_id\"],\"name\":[18],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"charity.register_url\"],\"name\":[19],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"politics.parliamentary_constituency\"],\"name\":[20],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"politics.mp\"],\"name\":[21],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"politics.mp_party\"],\"name\":[22],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"politics.mp_parl_id\"],\"name\":[23],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"politics.ward\"],\"name\":[24],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"politics.district\"],\"name\":[25],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"politics.urls.self\"],\"name\":[26],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"politics.urls.html\"],\"name\":[27],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Exeter Food Bank\",\"2\":\"NA\",\"3\":\"exeter\",\"4\":\"07818226524\",\"5\":\"NA\",\"6\":\"info@exeterfoodbank.org.uk\",\"7\":\"174/175 Cowick Street\\\\r\\\\nExeter\\\\r\\\\nDevon\\\\r\\\\nEX4 1AA\",\"8\":\"EX4 1AA\",\"9\":\"FALSE\",\"10\":\"England\",\"11\":\"50.7177382,-3.5387787\",\"12\":\"Trussell\",\"13\":\"2020-01-14T16:46:05.933\",\"14\":\"https://www.givefood.org.uk/api/2/foodbank/exeter/\",\"15\":\"https://www.givefood.org.uk/needs/at/exeter/\",\"16\":\"https://exeterfoodbank.co.uk\",\"17\":\"https://exeterfoodbank.co.uk/give-help/\",\"18\":\"1128795\",\"19\":\"https://register-of-charities.charitycommission.gov.uk/charity-details/?regid=1128795&subid=0\",\"20\":\"Exeter\",\"21\":\"Simon Jupp\",\"22\":\"Conservative\",\"23\":\"4862\",\"24\":\"St Thomas\",\"25\":\"Exeter\",\"26\":\"https://www.givefood.org.uk/api/2/constituency/exeter/\",\"27\":\"https://www.givefood.org.uk/needs/in/constituency/exeter/\",\"_rn_\":\"1\"},{\"1\":\"Warrington Food Bank\",\"2\":\"NA\",\"3\":\"warrington\",\"4\":\"01925977630\",\"5\":\"NA\",\"6\":\"info@warrington.foodbank.org.uk\",\"7\":\"Hilda Whitfield House\\\\r\\\\n9 Tanning Court\\\\r\\\\nWarrington\\\\r\\\\nCheshire\\\\r\\\\nWA1 2HF\",\"8\":\"WA1 2HF\",\"9\":\"FALSE\",\"10\":\"England\",\"11\":\"53.3938275,-2.5941592\",\"12\":\"Trussell\",\"13\":\"2019-07-12T11:45:55.685\",\"14\":\"https://www.givefood.org.uk/api/2/foodbank/warrington/\",\"15\":\"https://www.givefood.org.uk/needs/at/warrington/\",\"16\":\"https://warrington.foodbank.org.uk\",\"17\":\"https://warrington.foodbank.org.uk/give-help/donate-food/\",\"18\":\"1152525\",\"19\":\"https://register-of-charities.charitycommission.gov.uk/charity-details/?regid=1152525&subid=0\",\"20\":\"Warrington North\",\"21\":\"Charlotte Nichols\",\"22\":\"Labour\",\"23\":\"4799\",\"24\":\"Fairfield and Howley\",\"25\":\"Warrington\",\"26\":\"https://www.givefood.org.uk/api/2/constituency/warrington-north/\",\"27\":\"https://www.givefood.org.uk/needs/in/constituency/warrington-north/\",\"_rn_\":\"2\"},{\"1\":\"Edenbridge Food Bank\",\"2\":\"NA\",\"3\":\"edenbridge\",\"4\":\"07756238063\",\"5\":\"NA\",\"6\":\"info@edenbridge.foodbank.org.uk\",\"7\":\"Rickards Hall\\\\r\\\\n72a High Street\\\\r\\\\nEdenbridge\\\\r\\\\nTN8 5AR\",\"8\":\"TN8 5AR\",\"9\":\"FALSE\",\"10\":\"England\",\"11\":\"51.1961285,0.0646653\",\"12\":\"Trussell\",\"13\":\"2021-05-11T14:44:17.788\",\"14\":\"https://www.givefood.org.uk/api/2/foodbank/edenbridge/\",\"15\":\"https://www.givefood.org.uk/needs/at/edenbridge/\",\"16\":\"https://edenbridge.foodbank.org.uk\",\"17\":\"https://edenbridge.foodbank.org.uk/give-help/donate-food/\",\"18\":\"1181051\",\"19\":\"https://register-of-charities.charitycommission.gov.uk/charity-details/?regid=1181051&subid=0\",\"20\":\"Tonbridge\",\"21\":\"Thomas Tugendhat\",\"22\":\"Conservative\",\"23\":\"4462\",\"24\":\"Edenbridge South and West\",\"25\":\"Sevenoaks\",\"26\":\"https://www.givefood.org.uk/api/2/constituency/tonbridge/\",\"27\":\"https://www.givefood.org.uk/needs/in/constituency/tonbridge/\",\"_rn_\":\"3\"},{\"1\":\"Poole Food Bank\",\"2\":\"NA\",\"3\":\"poole\",\"4\":\"01202672694\",\"5\":\"NA\",\"6\":\"poolefood@faith-works.org.uk\",\"7\":\"Jimmy's Place\\\\r\\\\nSt James' Church Centre\\\\r\\\\nChurch Street\\\\r\\\\nPoole\\\\r\\\\nBH15 1JN\",\"8\":\"BH15 1JN\",\"9\":\"FALSE\",\"10\":\"England\",\"11\":\"50.7134672,-1.9897421\",\"12\":\"IFAN\",\"13\":\"2020-02-29T11:33:14.567\",\"14\":\"https://www.givefood.org.uk/api/2/foodbank/poole/\",\"15\":\"https://www.givefood.org.uk/needs/at/poole/\",\"16\":\"https://faith-works.org.uk/locations-across-dorset/poole-food-bank-dorset/\",\"17\":\"https://faith-works.org.uk/locations-across-dorset/poole-food-bank-dorset/\",\"18\":\"1108714\",\"19\":\"https://register-of-charities.charitycommission.gov.uk/charity-details/?regid=1108714&subid=0\",\"20\":\"Poole\",\"21\":\"Robert Syms\",\"22\":\"Conservative\",\"23\":\"245\",\"24\":\"Poole Town\",\"25\":\"Bournemouth, Christchurch and Poole\",\"26\":\"https://www.givefood.org.uk/api/2/constituency/poole/\",\"27\":\"https://www.givefood.org.uk/needs/in/constituency/poole/\",\"_rn_\":\"4\"},{\"1\":\"Storehouse North Down Food Bank\",\"2\":\"NA\",\"3\":\"storehouse-north-down\",\"4\":\"07526541168\",\"5\":\"NA\",\"6\":\"info@storehousenorthdown.com\",\"7\":\"12 Balloo Avenue\\\\r\\\\nBangor\\\\r\\\\nNorthern Ireland\\\\r\\\\nBT19 7QT\",\"8\":\"BT19 7QT\",\"9\":\"FALSE\",\"10\":\"Northern Ireland\",\"11\":\"54.642536,-5.671071\",\"12\":\"IFAN\",\"13\":\"2020-09-19T08:32:21.670\",\"14\":\"https://www.givefood.org.uk/api/2/foodbank/storehouse-north-down/\",\"15\":\"https://www.givefood.org.uk/needs/at/storehouse-north-down/\",\"16\":\"https://storehousenorthdown.com\",\"17\":\"https://storehousenorthdown.com/items-needed/\",\"18\":\"NIC101072\",\"19\":\"https://www.charitycommissionni.org.uk/charity-details/?regId=101072\",\"20\":\"North Down\",\"21\":\"Stephen Farry\",\"22\":\"Alliance\",\"23\":\"4856\",\"24\":\"Ballygrainey\",\"25\":\"Ards and North Down\",\"26\":\"https://www.givefood.org.uk/api/2/constituency/north-down/\",\"27\":\"https://www.givefood.org.uk/needs/in/constituency/north-down/\",\"_rn_\":\"5\"},{\"1\":\"Cleckheaton Food Bank\",\"2\":\"NA\",\"3\":\"cleckheaton\",\"4\":\"07955732598\",\"5\":\"NA\",\"6\":\"cleckheatonfoodbank@gmail.com\",\"7\":\"Methodist Church\\\\r\\\\nMortimer Street\\\\r\\\\nCleckheaton\\\\r\\\\nBD19 5AR\",\"8\":\"BD19 5AR\",\"9\":\"FALSE\",\"10\":\"England\",\"11\":\"53.7228745,-1.7134936\",\"12\":\"Independent\",\"13\":\"2023-05-04T07:45:14.617\",\"14\":\"https://www.givefood.org.uk/api/2/foodbank/cleckheaton/\",\"15\":\"https://www.givefood.org.uk/needs/at/cleckheaton/\",\"16\":\"https://cleckheatonfoodbank.weebly.com\",\"17\":\"https://cleckheatonfoodbank.weebly.com/donate.html\",\"18\":\"1198915\",\"19\":\"https://register-of-charities.charitycommission.gov.uk/charity-details/?regid=1198915&subid=0\",\"20\":\"Spen Valley\",\"21\":\"Kim Leadbeater\",\"22\":\"Labour\",\"23\":\"4923\",\"24\":\"Cleckheaton\",\"25\":\"Kirklees\",\"26\":\"https://www.givefood.org.uk/api/2/constituency/spen-valley/\",\"27\":\"https://www.givefood.org.uk/needs/in/constituency/spen-valley/\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n## Python 🐍\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport requests\n\nimport pandas as pd\n\nresponse = requests.get(\"https://www.givefood.org.uk/api/2/foodbanks\")\n\n# Check if the request was successful\n\nprint(response.status_code)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> 200\n```\n\n\n:::\n\n```{.python .cell-code}\n# Parse the response JSON data\n\nfood_json = response.json()\n\n# Convert to a pandas dataframe\n\nfood_dataframe = pd.json_normalize(food_json)\n\nfood_dataframe.shape\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> (954, 27)\n```\n\n\n:::\n\n```{.python .cell-code}\nfood_dataframe.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>                               name  ...                                 politics.urls.html\n#> 0                 Exeter Food Bank  ...  https://www.givefood.org.uk/needs/in/constitue...\n#> 1             Warrington Food Bank  ...  https://www.givefood.org.uk/needs/in/constitue...\n#> 2             Edenbridge Food Bank  ...  https://www.givefood.org.uk/needs/in/constitue...\n#> 3                  Poole Food Bank  ...  https://www.givefood.org.uk/needs/in/constitue...\n#> 4  Storehouse North Down Food Bank  ...  https://www.givefood.org.uk/needs/in/constitue...\n#> \n#> [5 rows x 27 columns]\n```\n\n\n:::\n:::\n\n\n\nIn this example, we use the `pd.json_normalize()` method to flatten the list of dictionaries and create a dataframe from it.\nThe resulting dataframe has columns for each key in the JSON objects.\n:::\n\n### With the key\n\nIn this example, we will use an API from [![](image-874061681.png){width=\"156\" height=\"30\"}](https://www.reed.co.uk/developers/Jobseeker) that uses an API key.\nIn this case, we will use a `GET` request to fetch data for analyst jobs based in London from the [Jobseeker](https://www.reed.co.uk/api/1.0/search?keywords=analyst&location=london&distancefromlocation=15) API. Please follow the steps in @sec-api-r for R and @sec-api-py for Python, and sign up for the API key at the Jobseeker [website](https://www.reed.co.uk/developers/Jobseeker).\n\n:::: {.panel-tabset group=\"language\"}\n## R Ⓡ \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr)\n\nlibrary(jsonlite)\n\nlibrary(dplyr)\n\n# Create a GET response to call the API\n\nresponse <- GET(\n  \"https://www.reed.co.uk/api/1.0/search?keywords=analyst&location=london&distancefromlocation=15\",\n  authenticate(\n    user = Sys.getenv(\"putyourapikeyhere\"),\n    password = \"\"\n  )\n)\n```\n:::\n\n\n\n::: callout-tip\nReplace `Sys.getenv(\"putyourapikeyhere\")` with your own API key.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstatus_code(response)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 200\n```\n\n\n:::\n\n```{.r .cell-code}\n# Convert the JSON string to a dataframe and view data in a table\n\njob_dataframe <- fromJSON(content(response, as = \"text\"), flatten = TRUE)\n\n# The job dataframe is inside the results\n\njob_dataframe$results %>%\n  dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 100  15\n```\n\n\n:::\n\n```{.r .cell-code}\njob_dataframe$results %>%\n  head()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"jobId\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"employerId\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"employerName\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"employerProfileId\"],\"name\":[4],\"type\":[\"lgl\"],\"align\":[\"right\"]},{\"label\":[\"employerProfileName\"],\"name\":[5],\"type\":[\"lgl\"],\"align\":[\"right\"]},{\"label\":[\"jobTitle\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"locationName\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"minimumSalary\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"maximumSalary\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"currency\"],\"name\":[10],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"expirationDate\"],\"name\":[11],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"date\"],\"name\":[12],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"jobDescription\"],\"name\":[13],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"applications\"],\"name\":[14],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"jobUrl\"],\"name\":[15],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"54673700\",\"2\":\"476108\",\"3\":\"AWE PLC\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"Contract Analyst\",\"7\":\"Reading\",\"8\":\"36540\",\"9\":\"40000\",\"10\":\"GBP\",\"11\":\"09/04/2025\",\"12\":\"19/03/2025\",\"13\":\"AWE is recruiting a Contract Analyst to carry out Contract Management including data analysis for AWE's Infrastructure call-off contracts. Salary: from 36,540 to 40,000 (depending on your suitability and level of experience) Location: Reading , with free onsite parking . Travel to Aldermaston and Green Park as required. Working pattern: AWE operates a 9-day working fortnight. We will consider flexible working requests so that your work may fit i...\",\"14\":\"10\",\"15\":\"https://www.reed.co.uk/jobs/contract-analyst/54673700\",\"_rn_\":\"1\"},{\"1\":\"54649264\",\"2\":\"402372\",\"3\":\"Anglian Water\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"Laboratory Analyst\",\"7\":\"Huntingdon\",\"8\":\"25448\",\"9\":\"25448\",\"10\":\"GBP\",\"11\":\"11/04/2025\",\"12\":\"14/03/2025\",\"13\":\"Starting Salary 25,448 per annum Permanent / 37 hours per week - Monday to Friday Based Location - Huntingdon Tap into your potential and test a new career with Anglian Water! Anglian Water supplies clean, safe drinking water to 4.3million people and cleans a billion litres of used water every single day before returning it back to nature, helping to protect both our rivers and biodiversity. Leading the industry by achieving ISO standards in qua...\",\"14\":\"12\",\"15\":\"https://www.reed.co.uk/jobs/laboratory-analyst/54649264\",\"_rn_\":\"2\"},{\"1\":\"53358077\",\"2\":\"616491\",\"3\":\"Sopra Steria\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"SOC Analyst\",\"7\":\"HP27AH\",\"8\":\"NA\",\"9\":\"NA\",\"10\":\"NA\",\"11\":\"07/05/2025\",\"12\":\"22/08/2024\",\"13\":\"Are you in a Security Operations Centre and want more excitement, more of a challenge? Then just look at this! We are searching for SOC Analysts to join our growing Security team in Sopra Steria's Aerospace Defence and Security sector. This incredible new journey will see you working with growing team supporting enterprise scale clients. This role will require you to have proven experience working in a busy SOC with a tech-first approach. The te...\",\"14\":\"83\",\"15\":\"https://www.reed.co.uk/jobs/soc-analyst/53358077\",\"_rn_\":\"3\"},{\"1\":\"54635503\",\"2\":\"685291\",\"3\":\"Smart4Sciences\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"QC Analyst\",\"7\":\"Hull\",\"8\":\"30000\",\"9\":\"32000\",\"10\":\"GBP\",\"11\":\"23/04/2025\",\"12\":\"12/03/2025\",\"13\":\"Role: QC Analyst Location: Hull Full time Salary: Around 30,000 - 32,000 A fantastic opportunity has arisen for Senior QC Analysts to join a sterile manufacturing facility in Hull. The role: QC Analyst As an Analyst you will: Design and carry out HPLC/UPLC/UV/GC analytical method validation and/or verification Support the department to monitor the quality of components, raw materials, products and production processes by inspection, sampling and...\",\"14\":\"40\",\"15\":\"https://www.reed.co.uk/jobs/qc-analyst/54635503\",\"_rn_\":\"4\"},{\"1\":\"54582039\",\"2\":\"685291\",\"3\":\"Smart4Sciences\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"QC Analyst\",\"7\":\"Preston\",\"8\":\"NA\",\"9\":\"NA\",\"10\":\"NA\",\"11\":\"15/04/2025\",\"12\":\"04/03/2025\",\"13\":\"Role: QC Analyst Location: Preston Full time Salary: Up to 28,000 A fantastic opportunity has arisen for a QC Analysts to join a sterile manufacturing facility in North Wales. We offer a fantastic package plus benefits such as: 7 % matched pension Discounts on common retail outlets through our rewards platform Generous holidays Salary sacrifice scheme Subsidised canteen Free parking The role: QC Analyst As an Analyst you will: Design and carry o...\",\"14\":\"69\",\"15\":\"https://www.reed.co.uk/jobs/qc-analyst/54582039\",\"_rn_\":\"5\"},{\"1\":\"54707674\",\"2\":\"675418\",\"3\":\"WEA\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"Systems Analyst\",\"7\":\"LS11AZ\",\"8\":\"27693\",\"9\":\"29746\",\"10\":\"GBP\",\"11\":\"11/04/2025\",\"12\":\"25/03/2025\",\"13\":\"People Systems Analyst Salary: 27,693 - 29,746 (pro rata) Location: Leeds, with hybrid working Hours 21 hours a week, 3 days a week The WEA is the UK’s largest voluntary sector provider of adult education, a charity dedicated to bringing high quality, professional education into the heart of communities. We believe that all adults, regardless of their situation, should have access to education. Job Description WEA are looking for talented indivi...\",\"14\":\"6\",\"15\":\"https://www.reed.co.uk/jobs/systems-analyst/54707674\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n## Python 🐍\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport requests\n\nimport pandas as pd\n\n# Set API endpoint and API key\n\nurl = \"https://www.reed.co.uk/api/1.0/search?keywords=analyst&location=london&distancefromlocation=15\"\n\napi_key = \"replace with your own API key\" \n```\n:::\n\n\n\nBased on the instructions in the API documentation, you will need to include your API key for all requests in a basic authentication http header as the username, leaving the password empty.\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Send a GET request to the API endpoint\n\nresponse = requests.get(url, auth = (api_key, ''))\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n# Check if the request was successful\n\nprint(response.status_code)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> 200\n```\n\n\n:::\n\n```{.python .cell-code}\n# Parse the response JSON data\n\njob_json = response.json()\n\n# Convert to a pandas dataframe\n\n# The dataframe is inside the results\n\njob_dataframe = pd.json_normalize(job_json[\"results\"])\n\njob_dataframe.shape\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> (100, 15)\n```\n\n\n:::\n\n```{.python .cell-code}\njob_dataframe.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>       jobId  ...                                             jobUrl\n#> 0  54673700  ...  https://www.reed.co.uk/jobs/contract-analyst/5...\n#> 1  54649264  ...  https://www.reed.co.uk/jobs/laboratory-analyst...\n#> 2  53358077  ...   https://www.reed.co.uk/jobs/soc-analyst/53358077\n#> 3  54635503  ...    https://www.reed.co.uk/jobs/qc-analyst/54635503\n#> 4  54582039  ...    https://www.reed.co.uk/jobs/qc-analyst/54582039\n#> \n#> [5 rows x 15 columns]\n```\n\n\n:::\n:::\n\n\n::::\n\nYou can now use the data for your data science.\n\n## Other resources\n\nYou can also watch `Dean Chereden` YouTube video on how to GET data from an API using R in RStudio.\n\n\n\n{{< video https://www.youtube.com/watch?v=AhZ42vSmDmE&list=PLfXinLezajxuWY8QyhQ7joAC8bL_dz1pd&index=7 aspect-ratio=\"16x9\" >}}\n\n\n\n\n------------------------------------------------------------------------\n\nI hope you found this article informative.\nYou can find its GitHub repository [here](https://github.com/gbganalyst/API-in-R-and-Python).\nIf you enjoyed reading this write-up, please follow me on [Twitter](https://twitter.com/gbganalyst) and [Linkedin](https://linkedin.com/in/ezekiel-ogundepo) for more updates on `R`, `Python`, and `Excel` for data science.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}